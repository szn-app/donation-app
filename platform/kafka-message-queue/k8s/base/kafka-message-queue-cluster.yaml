# NOTE: Apache Kafka with Raft-based implementation is still under development and has some limitations. For instance, scaling of controller node or JBOD storage (you can specify type: jbod storage in Strimzi custom resources, but it should contain only a single volume) are not supported.

# https://strimzi.io/docs/operators/latest/full/configuring#type-KafkaClusterSpec-reference

apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-message-queue-cluster
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled

spec:
  kafka:
    # version: 3.9.0
    # metadataVersion: 3.9-IV0
    version: 4.0.0
    metadataVersion: 4.0-IV3

    listeners:
      # NOTE: communication is assumed to be network-level encrypted by Cilium
      - name: http
        port: 9092
        type: internal
        tls: false
        # TODO: after upgrade to 4.0.0 and strimzi 0.46.0 authentication with SASL-SCRAM-512 stopped working, brokers are not able to connect
        # authentication:
        #   type: scram-sha-512

      # for external endpoints
      - name: https
        port: 9093
        type: internal
        tls: true
      # authentication:
      #   type: scram-sha-512

    # supports user ACL authorization
    # authorization:
    #   type: simple

    config:
      default.replication.factor: 3
      min.insync.replicas: 2
      # inter.broker.listener.name: http
      # sasl.mechanism.inter.broker.protocol: SCRAM-SHA-512
      # sasl.enabled.mechanisms: SCRAM-SHA-512

    #   auto.create.topics.enable: "true"
    #   offsets.topic.replication.factor: 3
    #   transaction.state.log.replication.factor: 3
    #   transaction.state.log.min.isr: 2
    #   default.replication.factor: 3
    #   min.insync.replicas: 2

    # logging:
    #   type: inline
    #   loggers:
    #     log4j.logger.kafka: DEBUG
    #     log4j.logger.org.apache.kafka: DEBUG
    #     log4j.logger.kafka.network.RequestChannel$: DEBUG
    #     log4j.logger.kafka.request.logger: DEBUG
    #     log4j.logger.org.apache.kafka.common.security.authenticator: DEBUG
    #     log4j.logger.org.apache.kafka.common.security.scram: DEBUG
    #     log4j.logger.kafka.server.KafkaServer: DEBUG

  entityOperator:
    topicOperator: {}
    userOperator: {}
