name: auth-ui.release

on:
    workflow_call:
      # inputs:
      #   config-path:
      #     required: true
      #     type: string
      # secrets:
      #   token:
      #     required: true
    workflow_dispatch:  

jobs: 

    publish-package:
        permissions:
          contents: write
        strategy:
          fail-fast: false
    
        runs-on: "ubuntu-latest"
    
        defaults:
          run:
            shell: bash
            working-directory: ./service/auth-ui
    
        steps:
          - name: Checkout repo
            uses: actions/checkout@v4
            with:
              submodules: recursive
    
          # find release ID given the associated tag and pass it to Tauri build in following step (bc it seems like tauri-action fails to find the release id sometimes)
          - name: Find Release ID
            id: find_release_id
            env:
              GITHUB_TOKEN: ${{secrets.PAT_WORKFLOW}}
            run: |
              release_id=$(gh release view ${{ needs.release-please.outputs.auth-ui--tag_name }} --json databaseId | jq -r '.databaseId')
              echo "release_id=$release_id" >> $GITHUB_OUTPUT
              if [[ -z "$release_id" ]]; then
                echo "Error: release id retrieval failed for tagname: ${{ needs.release-please.outputs.auth-ui--tag_name }}"
                exit 1;
              else 
                echo "release_id=$release_id"
              fi
    
          - name: build auth-ui container
            run: |
              chmod +x ./script.sh 
              ./script.sh bulid_container_auth_ui
    
          - name: upload container to Github Container Registry
            run: |
              echo "${{ secrets.PAT_GITHUB_CONTAINER_REGISTRY }}" | docker login ghcr.io -u ${{github.actor}} --password-stdin
              TAG=auth-ui:latest
              docker tag $TAG ghcr.io/szn-app/donation-app/$TAG
              docker push ghcr.io/szn-app/donation-app/$TAG
              VERSION_TAG=${{ needs.release-please.outputs.auth-ui--tag_name }}
              MAPPED_VERSION="${VERSION_TAG//@/:}"
              docker tag $TAG ghcr.io/szn-app/donation-app/$MAPPED_VERSION
              docker push ghcr.io/szn-app/donation-app/$MAPPED_VERSION
    
          - name: Update release description
            run: |
              release_desc=$(gh release view ${{ needs.release-please.outputs.auth-ui--tag_name }} --json body | jq -r '.body')
              new_desc=$(cat <<EOF
              $release_desc
              ___
              ### Container:
              * [auth-ui:latest](https://ghcr.io/szn-app/donation-app/auth-ui:latest)
              EOF
              )
              gh release edit ${{ needs.release-please.outputs.auth-ui--tag_name }} --notes "$new_desc"
            env:
              GITHUB_TOKEN: ${{secrets.PAT_WORKFLOW}}
    
    