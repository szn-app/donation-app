

name: _print

on:
  workflow_dispatch:  
      
      
jobs:
  print:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout repo
          uses: actions/checkout@v4

        # find release ID given the associated tag and pass it to Tauri build in following step (bc it seems like tauri-action fails to find the release id sometimes)
        -   name: Find Release ID
            id: find_release_id
            env:
                GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
            run: |
                release_id=$(gh release view web-server@v0.0.23 --json id | jq -r '.id')
                echo "::set-output name=release_id::$release_id"

        - name: printing
          run: echo "${{ steps.find_release_id.outputs.release_id }}"
    
    
  build:
        permissions:
          contents: write
    
        strategy:
          fail-fast: false
          matrix:
            include: 
              - platform: "ubuntu-latest"
                args: ""
    
        runs-on: ${{matrix.platform}}
        
        defaults:
          run:
            shell: bash
            working-directory: ./service/web-server
            
        steps:
          - name: Checkout repo
            uses: actions/checkout@v4
    
          # find release ID given the associated tag and pass it to Tauri build in following step (bc it seems like tauri-action fails to find the release id sometimes)
          - name: Find Release ID
            id: find_release_id
            env:
              GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
            run: |
              release_id=$(gh release view ${{ needs.release-please.outputs.web-server--tag_name }} --json id | jq -r '.id')
              echo "::set-output name=release_id::$release_id"
    
          - name: Install dependencies for tauri 
            if: startsWith(matrix.platform, 'ubuntu')
            working-directory: ./
            run: | 
              chmod +x ./script.sh
              ./script.sh install_tauri_dependencies_debian
              
          - name: Install pnpm
            uses: pnpm/action-setup@v4
            with:
              run_install: false  # Prevent automatic installation of dependencies
              version: latest
              
          - name: install NodeJS
            uses: actions/setup-node@v4
            with:
              node-version: 'lts/*'
              cache: 'pnpm'
              cache-dependency-path: ./service/web-server
    
          - name: install Rust
            uses: dtolnay/rust-toolchain@stable
            with:
              # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
              targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
    
          - name: cache Rust
            uses: swatinem/rust-cache@v2
            with:
              workspaces: './src-tauri -> target'
    
          - name: install dependencies & build project
            working-directory: ./
            run: |
              chmod +x ./script.sh
              ./script.sh build_react_spa
            
          - name: build project (tauri app) & upload artifacts to release
            uses: tauri-apps/tauri-action@v0
            env:
              GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
            with:
              projectPath: "service/web-server"
              releaseId: RE_kwDONX2Lvs4LWxEx # tag to find the release for (each github tag may be associated with a single release only)
              args: ${{ matrix.args }} # build specific formats
    
     