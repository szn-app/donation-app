// File is autogenerated by scanning all script and adding functions which has "#task" to their name
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "dev.minikube#provision#task@infrastructure",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && dev.minikube#provision#task@infrastructure"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) dev.minikube#provision#task@infrastructure"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "hetzner-cloud#provision#task@infrastructure",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && hetzner-cloud#provision#task@infrastructure"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) hetzner-cloud#provision#task@infrastructure"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@api-data-object-store",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@api-data-object-store"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@api-data-object-store"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "local#bootstrap#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && local#bootstrap#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) local#bootstrap#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "dev.skaffold#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && dev.skaffold#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) dev.skaffold#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "dev_production_mode.skaffold#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && dev_production_mode.skaffold#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) dev_production_mode.skaffold#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@api-data-database",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@api-data-database"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@api-data-database"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "add_vscode_tasks#setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && add_vscode_tasks#setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) add_vscode_tasks#setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "add_vscode_workspaces#setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && add_vscode_workspaces#setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) add_vscode_workspaces#setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "config#aggregate_setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && config#aggregate_setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "silent",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) config#aggregate_setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "record_version#setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && record_version#setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) record_version#setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "rust_script#setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && rust_script#setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "silent",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) rust_script#setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete.dev.skaffold#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.dev.skaffold#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.dev.skaffold#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "tunnel.minikube#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && tunnel.minikube#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) tunnel.minikube#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete_tunnel.minikube#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete_tunnel.minikube#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete_tunnel.minikube#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete#task@auth-ory-stack",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete#task@auth-ory-stack"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete#task@auth-ory-stack"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "deploy#task@auth-ory-stack",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && deploy#task@auth-ory-stack"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) deploy#task@auth-ory-stack"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete_deploy#task@auth-ory-stack",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete_deploy#task@auth-ory-stack"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete_deploy#task@auth-ory-stack"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@ory-kratos-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@ory-kratos-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@ory-kratos-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete_pvc#task@ory-kratos-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete_pvc#task@ory-kratos-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete_pvc#task@ory-kratos-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "freeup_space.minikube#cleanup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && freeup_space.minikube#cleanup#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) freeup_space.minikube#cleanup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "render.skaffold#task@api-data-database",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@api-data-database"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@api-data-database"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "render.skaffold#task@ory-kratos-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@ory-kratos-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@ory-kratos-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete_pvc#task@ory-hydra-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete_pvc#task@ory-hydra-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete_pvc#task@ory-hydra-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete_pvc#task@ory-keto-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete_pvc#task@ory-keto-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete_pvc#task@ory-keto-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "render.skaffold#task@ory-hydra-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@ory-hydra-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@ory-hydra-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "render.skaffold#task@ory-keto-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@ory-keto-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@ory-keto-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@ory-hydra-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@ory-hydra-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@ory-hydra-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@ory-keto-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@ory-keto-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@ory-keto-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete.minikube#provision#task@infrastructure",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.minikube#provision#task@infrastructure"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.minikube#provision#task@infrastructure"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    }
  ]
}
