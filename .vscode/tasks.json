// File is autogenerated by scanning all script and adding functions which has "#task" to their name
{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "kubernetes-k9s",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "k9s"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) k9s"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "docker-lazydocker",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "lazydocker"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) lazydocker"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "git-lazygit",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "lazygit"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) lazygit"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "rust_script#setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && rust_script#setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "silent",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) rust_script#setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete.skaffold#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.skaffold#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.skaffold#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete.skaffold#task@auth-ory-stack",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.skaffold#task@auth-ory-stack"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.skaffold#task@auth-ory-stack"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@ory-kratos-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@ory-kratos-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@ory-kratos-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "freeup_space.minikube#cleanup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && freeup_space.minikube#cleanup#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) freeup_space.minikube#cleanup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "render.skaffold#task@api-data-database",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@api-data-database"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@api-data-database"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "render.skaffold#task@ory-kratos-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@ory-kratos-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@ory-kratos-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "render.skaffold#task@ory-hydra-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@ory-hydra-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@ory-hydra-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "render.skaffold#task@ory-keto-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@ory-keto-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@ory-keto-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@ory-hydra-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@ory-hydra-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@ory-hydra-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@ory-keto-db",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@ory-keto-db"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@ory-keto-db"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete.minikube#provision#task@infrastructure",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.minikube#provision#task@infrastructure"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.minikube#provision#task@infrastructure"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "minikube#aggregate_cleanup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && minikube#aggregate_cleanup#task@monorepo"
      ],
      "presentation": {
        "reveal": "silent",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) minikube#aggregate_cleanup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete.tunnel.minikube#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.tunnel.minikube#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.tunnel.minikube#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "production_mode.skaffold#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && production_mode.skaffold#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) production_mode.skaffold#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "start.minikube#bootstrap#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && start.minikube#bootstrap#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) start.minikube#bootstrap#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "start.tunnel.minikube#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && start.tunnel.minikube#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) start.tunnel.minikube#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "hetzner.cloud#provision#task@infrastructure",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && hetzner.cloud#provision#task@infrastructure"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) hetzner.cloud#provision#task@infrastructure"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "install.minikube#provision#task@infrastructure",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && install.minikube#provision#task@infrastructure"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) install.minikube#provision#task@infrastructure"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete.skaffold#task@auth-ory-stack",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.skaffold#task@auth-ory-stack"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.skaffold#task@auth-ory-stack"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "development_mode.skaffold#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && development_mode.skaffold#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) development_mode.skaffold#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@auth-ory-stack",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@auth-ory-stack"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@auth-ory-stack"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "delete_pvc#task@auth-ory-stack",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete_pvc#task@auth-ory-stack"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete_pvc#task@auth-ory-stack"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "add_vscode_tasks#setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && add_vscode_tasks#setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) add_vscode_tasks#setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "add_vscode_workspaces#setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && add_vscode_workspaces#setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) add_vscode_workspaces#setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "config#aggregate_setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && config#aggregate_setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) config#aggregate_setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "delete.skaffold#task@web-server",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.skaffold#task@web-server"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.skaffold#task@web-server"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "record_version#setup#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && record_version#setup#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) record_version#setup#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@api-data-database",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@api-data-database"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@api-data-database"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@api-data-object-store",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@api-data-object-store"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@api-data-object-store"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@pgadmin4",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@pgadmin4"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@pgadmin4"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "skaffold#task@web-server",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@web-server"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@web-server"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": []
    },
    {
      "label": "scaffold.production_mode.skaffold#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && scaffold.production_mode.skaffold#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) scaffold.production_mode.skaffold#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "render.skaffold#task@kafka-message-queue",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@kafka-message-queue"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@kafka-message-queue"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "skaffold#task@kafka-message-queue",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@kafka-message-queue"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@kafka-message-queue"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "install.kafka-operator#task@infrastructure",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && install.kafka-operator#task@infrastructure"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) install.kafka-operator#task@infrastructure"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "github-workflow-config#setup#task@monorepo.script.rs",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && github-workflow-config#setup#task@monorepo.script.rs"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) github-workflow-config#setup#task@monorepo.script.rs"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "skaffold#task@webhook-handler",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@webhook-handler"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@webhook-handler"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "delete.skaffold#task@webhook-handler",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.skaffold#task@webhook-handler"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.skaffold#task@webhook-handler"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "skaffold#task@kafka-ui",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@kafka-ui"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@kafka-ui"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "render.skaffold#task@kafka-ui",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && render.skaffold#task@kafka-ui"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) render.skaffold#task@kafka-ui"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "services.production_mode.skaffold#task@monorepo",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && services.production_mode.skaffold#task@monorepo"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) services.production_mode.skaffold#task@monorepo"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "skaffold#task@api-data",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@api-data"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@api-data"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "skaffold#task@api-data-server",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && skaffold#task@api-data-server"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) skaffold#task@api-data-server"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "delete#task#manual-delete@kafka-message-queue",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete#task#manual-delete@kafka-message-queue"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete#task#manual-delete@kafka-message-queue"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "delete.skaffold#task#manual-delete@auth-ory-stack",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.skaffold#task#manual-delete@auth-ory-stack"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.skaffold#task#manual-delete@auth-ory-stack"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "delete.skaffold#task@api-data-database",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.skaffold#task@api-data-database"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.skaffold#task@api-data-database"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "delete.skaffold#task@api-data-server",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.skaffold#task@api-data-server"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.skaffold#task@api-data-server"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "delete.skaffold#task#manual-delete@pgadmin4",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && delete.skaffold#task#manual-delete@pgadmin4"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) delete.skaffold#task#manual-delete@pgadmin4"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "view-db-diagram#task@api-data-database",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && view-db-diagram#task@api-data-database"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) view-db-diagram#task@api-data-database"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    },
    {
      "label": "generate_dbml_from_sql_migration#task@api-data-database",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "source ${workspaceFolder}/script.sh && generate_dbml_from_sql_migration#task@api-data-database"
      ],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      },
      "group": "none",
      "options": {
        "cwd": "${workspaceFolder}/",
        "statusbar": {
          "label": "$(run) generate_dbml_from_sql_migration#task@api-data-database"
        }
      },
      "dependsOrder": "parallel",
      "dependsOn": [],
      "problemMatcher": [],
      "runOptions": {}
    }
  ]
}
