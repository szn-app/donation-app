#!/bin/bash
set -e

# https://code.visualstudio.com/docs/editor/tasks
add_vscode_tasks#setup#task@monorepo() {(
    mkdir -p .vscode
    
    for task in $(filter_functions_by_args.util '#task'); do
        echo "Adding task: $task"

        # Check if task already exists
        if ! grep -qw "\"label\":[[:space:]]*\"$task\"" .vscode/tasks.json; then
            # Use jq to properly add task to JSON structure
            local t=$(mktemp)

            # Remove comments from extended json5 and add task
            sed '/^[[:space:]]*\/\//d' .vscode/tasks.json | \
            jq --arg task "$task" '.tasks += [{
                "label": $task,
                "type": "shell",
                "command": "bash",
                "args": ["-c", "source ${workspaceFolder}/script.sh && " + $task],
                "presentation": {
                    "reveal": "always",
                    "panel": "dedicated"
                },
                "group": "none",
                "options": {
                    "cwd": "${workspaceFolder}/", 
                      "statusbar": {
                      "label" : "$(run) '$task'",
                    }
                },
                "dependsOrder": "parallel",
                "dependsOn": [],
                "problemMatcher": [],
                "runOptions": {
                }
            }]' > "$t"
            
            # Add autogenerated comment
            echo '// File is autogenerated by scanning all script and adding functions which has "#task" to their name' | cat - "$t" > temp && mv temp "$t"
            
            mv "$t" .vscode/tasks.json
            echo "Task '$task' added to tasks.json"
        else
            echo "Task '$task' already exists, skipping"
        fi
    done

    # Remove tasks that do not have an equivalent task entry
    {
        local current_tasks=$(mktemp)
        sed '/^[[:space:]]*\/\//d' .vscode/tasks.json | \
        jq '.tasks[] | .label' > "$current_tasks"

        for task in $(cat "$current_tasks"); do
            task=$(echo "$task" | tr -d '"')
            # Skip tasks that don't have '#task' in their name
            if [[ "$task" != *"#task"* ]]; then
                echo "Skipping task '$task' as it doesn't contain '#task' thus wasn't autogenerated"
                continue
            fi

            if ! filter_functions_by_args.util '#task' | grep -qw "$task"; then
                sed '/^[[:space:]]*\/\//d' .vscode/tasks.json | \
                jq --arg task "$task" 'del(.tasks[] | select(.label == $task))' > .vscode/tasks.json.tmp && mv .vscode/tasks.json.tmp .vscode/tasks.json
            fi
        done

        rm "$current_tasks"
    }

)}
