apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: api-data-server

requires:
  - path: ../api-data-object-store
    configs: [api-data-object-store]

  - path: ../api-data-database
    configs: [api-data-database]

  - path: .
    configs: [api-data-server-generic]
    activeProfiles:
      - name: dev-env
        activatedBy: [dev-watch, dev-rebuild]
      - name: staging-env
        activatedBy: [staging-rebuild, staging-prebuilt]
      - name: prod-env
        activatedBy: [prod]
      - name: watch
        activatedBy: [dev-watch]
      - name: rebuild-debug
        activatedBy: [dev-rebuild]
      - name: rebuild-release
        activatedBy: [staging-rebuild]
      - name: prebuilt
        activatedBy: [staging-prebuilt, prod]

profiles:
  - name: dev-watch
  - name: dev-rebuild
  - name: staging-rebuild
  - name: staging-prebuilt
  - name: prod

---
apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: api-data-server-generic

build:
  local:
    useBuildkit: true
    push: false
    tryImportMissing: false
  tagPolicy:
    # sha256: {}
    gitCommit: {}
    # customTemplate:
    #   template: "api-data-server:latest"
deploy:
  kubectl: {}
  statusCheck: true

portForward:
  - resourceType: Service
    namespace: api-data
    resourceName: api-data-server
    port: 80

profiles:
  - name: dev-env
    manifests:
      kustomize:
        paths:
          - k8s/overlays/dev

    deploy:
      kubectl:
        hooks:
          before:
            - host:
                command:
                  [
                    "bash",
                    "-it",
                    "-c",
                    "source ./script.sh && func#predeploy-skaffold-hook@api-data-server dev",
                  ]
                dir: .
          after:
            - host:
                command:
                  [
                    "bash",
                    "-it",
                    "-c",
                    "source ./script.sh && func#postdeploy-skaffold-hook@api-data-server dev",
                  ]
                dir: .

  - name: staging-env
    manifests:
      kustomize:
        paths:
          - k8s/overlays/staging

    deploy:
      kubectl:
        hooks:
          before:
            - host:
                command:
                  [
                    "bash",
                    "-it",
                    "-c",
                    "source ./script.sh && func#predeploy-skaffold-hook@api-data-server staging",
                  ]
                dir: .
          after:
            - host:
                command:
                  [
                    "bash",
                    "-it",
                    "-c",
                    "source ./script.sh && func#postdeploy-skaffold-hook@api-data-server staging",
                  ]
                dir: .

  - name: prod-env
    manifests:
      kustomize:
        paths:
          - k8s/overlays/prod

    deploy:
      kubectl:
        hooks:
          before:
            - host:
                command:
                  [
                    "bash",
                    "-it",
                    "-c",
                    "source ./script.sh && func#predeploy-skaffold-hook@api-data-server prod",
                  ]
                dir: .
          after:
            - host:
                command:
                  [
                    "bash",
                    "-it",
                    "-c",
                    "source ./script.sh && func#postdeploy-skaffold-hook@api-data-server prod",
                  ]
                dir: .

  - name: watch
    build:
      artifacts:
        - image: ghcr.io/szn-app/donation-app/api-data-server
          context: .
          docker:
            target: debug
            dockerfile: Dockerfile
            buildArgs: {}
          # NOTE: limitations https://skaffold.dev/docs/filesync/#limitations
          sync:
            manual:
              - src: "src/**/*.rs"
                dest: .

  - name: rebuild-debug
    build:
      artifacts:
        - image: ghcr.io/szn-app/donation-app/api-data-server
          context: .
          docker:
            target: debug
            dockerfile: Dockerfile
            noCache: false
            buildArgs: {}

  - name: rebuild-release
    build:
      artifacts:
        - image: ghcr.io/szn-app/donation-app/api-data-server
          context: .
          docker:
            target: release
            dockerfile: Dockerfile
            noCache: false
            buildArgs: {}

  - name: prebuilt
    build: {}
# # TODO: update and fix implementation
# - name: volume-development
#   # activation:
#   #   - kubeContext: minikube

#   build:
#     local:
#       push: false
#       tryImportMissing: false
#     artifacts:
#     - image: ghcr.io/szn-app/donation-app/api-data-server
#       context: .
#       docker:
#         target: development
#         dockerfile: Dockerfile
#         buildArgs: {}
#   manifests:
#     kustomize:
#       paths:
#       - k8s/overlays/dev-volume
#   deploy:
#     kubeContext: minikube

# # NOTE: used in CI/CD github workflow
# # TODO: implement in workflow and apply to other services. Use skaffold.env to set and read version number
# - name: hook-build-push
#   build:
#     local:
#       push: true
#       tryImportMissing: false
#     tagPolicy:
#       envTemplate:
#         template: "api-data-server:{{.VERSION_NUMBER}}"
#       # customTemplate:
#       #   template: "api-data-server:latest"
#     artifacts:
#     - image: ghcr.io/szn-app/donation-app/api-data-server
#       context: .
#       docker:
#         target: release
#         dockerfile: Dockerfile
#         buildArgs: {}
