/* eslint-disable */
import * as types from './graphql';



/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "\n  query GetTestListPartial {\n    listTests {\n      i\n      d\n    }\n  }\n": typeof types.GetTestListPartialDocument,
    "mutation CreateAccount($id: UUID!, $remarks: String) {\n  createAccount(id: $id, remarks: $remarks) {\n    id\n    remarks\n    createdAt\n  }\n}\n\nmutation UpdateAccount($id: UUID!, $remarks: String) {\n  updateAccount(id: $id, remarks: $remarks) {\n    id\n    remarks\n    createdAt\n  }\n}\n\nmutation DeleteAccount($id: UUID!) {\n  deleteAccount(id: $id)\n}\n\nmutation CreateProfile($idAccount: UUID!, $name: String!, $description: String) {\n  createProfile(idAccount: $idAccount, name: $name, description: $description) {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation UpdateProfile($id: Int!, $name: String!, $description: String, $variant: ProfileType) {\n  updateProfile(\n    id: $id\n    name: $name\n    description: $description\n    variant: $variant\n  ) {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation DeleteProfile($id: Int!) {\n  deleteProfile(id: $id)\n}\n\nmutation CreateCommunity($name: String!, $description: String, $variant: CommunityType!, $createdBy: UUID!) {\n  createCommunity(\n    name: $name\n    description: $description\n    variant: $variant\n    createdBy: $createdBy\n  ) {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation UpdateCommunity($id: Int!, $title: String!, $description: String, $variant: CommunityType!) {\n  updateCommunity(\n    id: $id\n    title: $title\n    description: $description\n    variant: $variant\n  ) {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation DeleteCommunity($id: Int!) {\n  deleteCommunity(id: $id)\n}\n\nmutation CreateCommittee($idProfile: Int!, $idCommunity: Int!, $memberRole: CommitteeRole!) {\n  createCommittee(\n    idProfile: $idProfile\n    idCommunity: $idCommunity\n    memberRole: $memberRole\n  ) {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nmutation UpdateCommittee($idProfile: Int!, $idCommunity: Int!, $memberRole: CommitteeRole!) {\n  updateCommittee(\n    idProfile: $idProfile\n    idCommunity: $idCommunity\n    memberRole: $memberRole\n  ) {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nmutation DeleteCommittee($idProfile: Int!, $idCommunity: Int!) {\n  deleteCommittee(idProfile: $idProfile, idCommunity: $idCommunity)\n}\n\nmutation CreateCategory($name: String!, $description: String!, $parentId: Int) {\n  createCategory(name: $name, description: $description, parentId: $parentId) {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nmutation UpdateCategory($id: Int!, $name: String, $description: String, $parentId: Int) {\n  updateCategory(\n    id: $id\n    name: $name\n    description: $description\n    parentId: $parentId\n  ) {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nmutation DeleteCategory($id: Int!) {\n  deleteCategory(id: $id)\n}\n\nmutation CreateLocation($addressLine1: String!, $addressLine2: String, $city: String!, $state: String!, $district: String, $country: String!, $coordinates: CoordinatesInput, $entranceNote: String) {\n  createLocation(\n    addressLine1: $addressLine1\n    addressLine2: $addressLine2\n    city: $city\n    state: $state\n    district: $district\n    country: $country\n    coordinates: $coordinates\n    entranceNote: $entranceNote\n  ) {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nmutation UpdateLocation($id: Int!, $addressLine1: String, $addressLine2: String, $city: String, $state: String, $district: String, $country: String, $coordinates: CoordinatesInput, $entranceNote: String) {\n  updateLocation(\n    id: $id\n    addressLine1: $addressLine1\n    addressLine2: $addressLine2\n    city: $city\n    state: $state\n    district: $district\n    country: $country\n    coordinates: $coordinates\n    entranceNote: $entranceNote\n  ) {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nmutation DeleteLocation($id: Int!) {\n  deleteLocation(id: $id)\n}\n\nmutation CreateItem($variant: ItemType!, $intentAction: ItemIntentAction!, $title: String, $description: String, $category: Int, $condition: ItemCondition!, $location: Int, $createdBy: UUID, $status: ItemStatus) {\n  createItem(\n    variant: $variant\n    intentAction: $intentAction\n    title: $title\n    description: $description\n    category: $category\n    condition: $condition\n    location: $location\n    createdBy: $createdBy\n    status: $status\n  ) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation UpdateItem($id: Int!, $status: ItemStatus!, $title: String, $description: String, $category: Int, $condition: ItemCondition!, $location: Int) {\n  updateItem(\n    id: $id\n    status: $status\n    title: $title\n    description: $description\n    category: $category\n    condition: $condition\n    location: $location\n  ) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation DeleteItem($id: Int!) {\n  deleteItem(id: $id)\n}\n\nmutation ReportItem($id: Int!) {\n  reportItem(id: $id) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation CreateCollection($idCommunity: Int!, $title: String!, $visibility: CollectionVisibility!, $variant: CollectionType!, $position: Int!) {\n  createCollection(\n    idCommunity: $idCommunity\n    title: $title\n    visibility: $visibility\n    variant: $variant\n    position: $position\n  ) {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nmutation UpdateCollection($id: Int!, $title: String!, $visibility: CollectionVisibility!, $variant: CollectionType!, $position: Int!) {\n  updateCollection(\n    id: $id\n    title: $title\n    visibility: $visibility\n    variant: $variant\n    position: $position\n  ) {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nmutation DeleteCollection($id: Int!) {\n  deleteCollection(id: $id)\n}\n\nmutation CreateMedia($idItem: Int!, $url: String!, $mediaType: MediaType!, $position: Int!) {\n  createMedia(\n    idItem: $idItem\n    url: $url\n    mediaType: $mediaType\n    position: $position\n  ) {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nmutation UpdateMedia($id: Int!, $url: String, $mediaType: MediaType, $position: Int) {\n  updateMedia(id: $id, url: $url, mediaType: $mediaType, position: $position) {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nmutation DeleteMedia($id: Int!) {\n  deleteMedia(id: $id)\n}\n\nmutation CreatePublish($idItem: Int!, $idCollection: Int!, $note: String, $position: Int!, $createdBy: UUID!) {\n  createPublish(\n    idItem: $idItem\n    idCollection: $idCollection\n    note: $note\n    position: $position\n    createdBy: $createdBy\n  ) {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nmutation UpdatePublish($idItem: Int!, $idCollection: Int!, $note: String, $position: Int!) {\n  updatePublish(\n    idItem: $idItem\n    idCollection: $idCollection\n    note: $note\n    position: $position\n  ) {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nmutation DeletePublish($idItem: Int!, $idCollection: Int!) {\n  deletePublish(idItem: $idItem, idCollection: $idCollection)\n}\n\nmutation CreateMessage($idTransaction: Int!, $idSender: UUID!, $variant: MessageType!, $content: String!) {\n  create(\n    idTransaction: $idTransaction\n    idSender: $idSender\n    variant: $variant\n    content: $content\n  ) {\n    id\n    idSender\n    idTransaction\n    variant\n    content\n    sent_at\n    updatedAt\n  }\n}\n\nmutation UpdateTransaction($id: Int!, $status: TransactionStatus!) {\n  update(id: $id, status: $status) {\n    id\n    idPledge\n    idSchedule\n    idLocation\n    status\n    createdAt\n    updatedAt\n  }\n}": typeof types.CreateAccountDocument,
    "query ListAccounts {\n  listAccounts {\n    id\n    remarks\n    createdAt\n  }\n}\n\nquery FindAccount($id: UUID!) {\n  findAccount(id: $id) {\n    id\n    remarks\n    createdAt\n  }\n}\n\nquery ListProfiles {\n  listProfiles {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery FindProfile($id: Int!) {\n  findProfile(id: $id) {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery ListCommunities {\n  listCommunities {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery FindCommunity($id: Int!) {\n  findCommunity(id: $id) {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery ListCommittees {\n  listCommittees {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nquery FindCommittee($id: UUID!) {\n  findCommittee(id: $id) {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nquery ListCategories {\n  listCategories {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nquery FindCategory($id: Int!) {\n  findCategory(id: $id) {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nquery ListItems {\n  listItems {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery FindItem($id: Int!) {\n  findItem(id: $id) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery ListLocations {\n  listLocations {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nquery FindLocation($id: Int!) {\n  findLocation(id: $id) {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nquery ListCollections {\n  listCollections {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nquery FindCollection($id: Int!) {\n  findCollection(id: $id) {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nquery ListMedia {\n  listMedia {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nquery FindMedia($id: Int!) {\n  findMedia(id: $id) {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nquery ListPublishes {\n  listPublishes {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nquery FindPublish($id: Int!) {\n  findPublish(id: $id) {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nquery ListMessages {\n  listMessages {\n    id\n    idSender\n    idTransaction\n    variant\n    content\n    sent_at\n    updatedAt\n  }\n}\n\nquery FindMessage($id: Int!) {\n  findMessage(id: $id) {\n    id\n    idSender\n    idTransaction\n    variant\n    content\n    sent_at\n    updatedAt\n  }\n}": typeof types.ListAccountsDocument,
    "query GetAccountList {\n  listAccounts {\n    id\n    createdAt\n  }\n}\n\nquery GetTestList {\n  listTests {\n    i\n    s\n    d\n  }\n}": typeof types.GetAccountListDocument,
};
const documents: Documents = {
    "\n  query GetTestListPartial {\n    listTests {\n      i\n      d\n    }\n  }\n": types.GetTestListPartialDocument,
    "mutation CreateAccount($id: UUID!, $remarks: String) {\n  createAccount(id: $id, remarks: $remarks) {\n    id\n    remarks\n    createdAt\n  }\n}\n\nmutation UpdateAccount($id: UUID!, $remarks: String) {\n  updateAccount(id: $id, remarks: $remarks) {\n    id\n    remarks\n    createdAt\n  }\n}\n\nmutation DeleteAccount($id: UUID!) {\n  deleteAccount(id: $id)\n}\n\nmutation CreateProfile($idAccount: UUID!, $name: String!, $description: String) {\n  createProfile(idAccount: $idAccount, name: $name, description: $description) {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation UpdateProfile($id: Int!, $name: String!, $description: String, $variant: ProfileType) {\n  updateProfile(\n    id: $id\n    name: $name\n    description: $description\n    variant: $variant\n  ) {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation DeleteProfile($id: Int!) {\n  deleteProfile(id: $id)\n}\n\nmutation CreateCommunity($name: String!, $description: String, $variant: CommunityType!, $createdBy: UUID!) {\n  createCommunity(\n    name: $name\n    description: $description\n    variant: $variant\n    createdBy: $createdBy\n  ) {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation UpdateCommunity($id: Int!, $title: String!, $description: String, $variant: CommunityType!) {\n  updateCommunity(\n    id: $id\n    title: $title\n    description: $description\n    variant: $variant\n  ) {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation DeleteCommunity($id: Int!) {\n  deleteCommunity(id: $id)\n}\n\nmutation CreateCommittee($idProfile: Int!, $idCommunity: Int!, $memberRole: CommitteeRole!) {\n  createCommittee(\n    idProfile: $idProfile\n    idCommunity: $idCommunity\n    memberRole: $memberRole\n  ) {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nmutation UpdateCommittee($idProfile: Int!, $idCommunity: Int!, $memberRole: CommitteeRole!) {\n  updateCommittee(\n    idProfile: $idProfile\n    idCommunity: $idCommunity\n    memberRole: $memberRole\n  ) {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nmutation DeleteCommittee($idProfile: Int!, $idCommunity: Int!) {\n  deleteCommittee(idProfile: $idProfile, idCommunity: $idCommunity)\n}\n\nmutation CreateCategory($name: String!, $description: String!, $parentId: Int) {\n  createCategory(name: $name, description: $description, parentId: $parentId) {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nmutation UpdateCategory($id: Int!, $name: String, $description: String, $parentId: Int) {\n  updateCategory(\n    id: $id\n    name: $name\n    description: $description\n    parentId: $parentId\n  ) {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nmutation DeleteCategory($id: Int!) {\n  deleteCategory(id: $id)\n}\n\nmutation CreateLocation($addressLine1: String!, $addressLine2: String, $city: String!, $state: String!, $district: String, $country: String!, $coordinates: CoordinatesInput, $entranceNote: String) {\n  createLocation(\n    addressLine1: $addressLine1\n    addressLine2: $addressLine2\n    city: $city\n    state: $state\n    district: $district\n    country: $country\n    coordinates: $coordinates\n    entranceNote: $entranceNote\n  ) {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nmutation UpdateLocation($id: Int!, $addressLine1: String, $addressLine2: String, $city: String, $state: String, $district: String, $country: String, $coordinates: CoordinatesInput, $entranceNote: String) {\n  updateLocation(\n    id: $id\n    addressLine1: $addressLine1\n    addressLine2: $addressLine2\n    city: $city\n    state: $state\n    district: $district\n    country: $country\n    coordinates: $coordinates\n    entranceNote: $entranceNote\n  ) {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nmutation DeleteLocation($id: Int!) {\n  deleteLocation(id: $id)\n}\n\nmutation CreateItem($variant: ItemType!, $intentAction: ItemIntentAction!, $title: String, $description: String, $category: Int, $condition: ItemCondition!, $location: Int, $createdBy: UUID, $status: ItemStatus) {\n  createItem(\n    variant: $variant\n    intentAction: $intentAction\n    title: $title\n    description: $description\n    category: $category\n    condition: $condition\n    location: $location\n    createdBy: $createdBy\n    status: $status\n  ) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation UpdateItem($id: Int!, $status: ItemStatus!, $title: String, $description: String, $category: Int, $condition: ItemCondition!, $location: Int) {\n  updateItem(\n    id: $id\n    status: $status\n    title: $title\n    description: $description\n    category: $category\n    condition: $condition\n    location: $location\n  ) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation DeleteItem($id: Int!) {\n  deleteItem(id: $id)\n}\n\nmutation ReportItem($id: Int!) {\n  reportItem(id: $id) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation CreateCollection($idCommunity: Int!, $title: String!, $visibility: CollectionVisibility!, $variant: CollectionType!, $position: Int!) {\n  createCollection(\n    idCommunity: $idCommunity\n    title: $title\n    visibility: $visibility\n    variant: $variant\n    position: $position\n  ) {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nmutation UpdateCollection($id: Int!, $title: String!, $visibility: CollectionVisibility!, $variant: CollectionType!, $position: Int!) {\n  updateCollection(\n    id: $id\n    title: $title\n    visibility: $visibility\n    variant: $variant\n    position: $position\n  ) {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nmutation DeleteCollection($id: Int!) {\n  deleteCollection(id: $id)\n}\n\nmutation CreateMedia($idItem: Int!, $url: String!, $mediaType: MediaType!, $position: Int!) {\n  createMedia(\n    idItem: $idItem\n    url: $url\n    mediaType: $mediaType\n    position: $position\n  ) {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nmutation UpdateMedia($id: Int!, $url: String, $mediaType: MediaType, $position: Int) {\n  updateMedia(id: $id, url: $url, mediaType: $mediaType, position: $position) {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nmutation DeleteMedia($id: Int!) {\n  deleteMedia(id: $id)\n}\n\nmutation CreatePublish($idItem: Int!, $idCollection: Int!, $note: String, $position: Int!, $createdBy: UUID!) {\n  createPublish(\n    idItem: $idItem\n    idCollection: $idCollection\n    note: $note\n    position: $position\n    createdBy: $createdBy\n  ) {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nmutation UpdatePublish($idItem: Int!, $idCollection: Int!, $note: String, $position: Int!) {\n  updatePublish(\n    idItem: $idItem\n    idCollection: $idCollection\n    note: $note\n    position: $position\n  ) {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nmutation DeletePublish($idItem: Int!, $idCollection: Int!) {\n  deletePublish(idItem: $idItem, idCollection: $idCollection)\n}\n\nmutation CreateMessage($idTransaction: Int!, $idSender: UUID!, $variant: MessageType!, $content: String!) {\n  create(\n    idTransaction: $idTransaction\n    idSender: $idSender\n    variant: $variant\n    content: $content\n  ) {\n    id\n    idSender\n    idTransaction\n    variant\n    content\n    sent_at\n    updatedAt\n  }\n}\n\nmutation UpdateTransaction($id: Int!, $status: TransactionStatus!) {\n  update(id: $id, status: $status) {\n    id\n    idPledge\n    idSchedule\n    idLocation\n    status\n    createdAt\n    updatedAt\n  }\n}": types.CreateAccountDocument,
    "query ListAccounts {\n  listAccounts {\n    id\n    remarks\n    createdAt\n  }\n}\n\nquery FindAccount($id: UUID!) {\n  findAccount(id: $id) {\n    id\n    remarks\n    createdAt\n  }\n}\n\nquery ListProfiles {\n  listProfiles {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery FindProfile($id: Int!) {\n  findProfile(id: $id) {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery ListCommunities {\n  listCommunities {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery FindCommunity($id: Int!) {\n  findCommunity(id: $id) {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery ListCommittees {\n  listCommittees {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nquery FindCommittee($id: UUID!) {\n  findCommittee(id: $id) {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nquery ListCategories {\n  listCategories {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nquery FindCategory($id: Int!) {\n  findCategory(id: $id) {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nquery ListItems {\n  listItems {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery FindItem($id: Int!) {\n  findItem(id: $id) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery ListLocations {\n  listLocations {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nquery FindLocation($id: Int!) {\n  findLocation(id: $id) {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nquery ListCollections {\n  listCollections {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nquery FindCollection($id: Int!) {\n  findCollection(id: $id) {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nquery ListMedia {\n  listMedia {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nquery FindMedia($id: Int!) {\n  findMedia(id: $id) {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nquery ListPublishes {\n  listPublishes {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nquery FindPublish($id: Int!) {\n  findPublish(id: $id) {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nquery ListMessages {\n  listMessages {\n    id\n    idSender\n    idTransaction\n    variant\n    content\n    sent_at\n    updatedAt\n  }\n}\n\nquery FindMessage($id: Int!) {\n  findMessage(id: $id) {\n    id\n    idSender\n    idTransaction\n    variant\n    content\n    sent_at\n    updatedAt\n  }\n}": types.ListAccountsDocument,
    "query GetAccountList {\n  listAccounts {\n    id\n    createdAt\n  }\n}\n\nquery GetTestList {\n  listTests {\n    i\n    s\n    d\n  }\n}": types.GetAccountListDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query GetTestListPartial {\n    listTests {\n      i\n      d\n    }\n  }\n"): typeof import('./graphql').GetTestListPartialDocument;
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "mutation CreateAccount($id: UUID!, $remarks: String) {\n  createAccount(id: $id, remarks: $remarks) {\n    id\n    remarks\n    createdAt\n  }\n}\n\nmutation UpdateAccount($id: UUID!, $remarks: String) {\n  updateAccount(id: $id, remarks: $remarks) {\n    id\n    remarks\n    createdAt\n  }\n}\n\nmutation DeleteAccount($id: UUID!) {\n  deleteAccount(id: $id)\n}\n\nmutation CreateProfile($idAccount: UUID!, $name: String!, $description: String) {\n  createProfile(idAccount: $idAccount, name: $name, description: $description) {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation UpdateProfile($id: Int!, $name: String!, $description: String, $variant: ProfileType) {\n  updateProfile(\n    id: $id\n    name: $name\n    description: $description\n    variant: $variant\n  ) {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation DeleteProfile($id: Int!) {\n  deleteProfile(id: $id)\n}\n\nmutation CreateCommunity($name: String!, $description: String, $variant: CommunityType!, $createdBy: UUID!) {\n  createCommunity(\n    name: $name\n    description: $description\n    variant: $variant\n    createdBy: $createdBy\n  ) {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation UpdateCommunity($id: Int!, $title: String!, $description: String, $variant: CommunityType!) {\n  updateCommunity(\n    id: $id\n    title: $title\n    description: $description\n    variant: $variant\n  ) {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation DeleteCommunity($id: Int!) {\n  deleteCommunity(id: $id)\n}\n\nmutation CreateCommittee($idProfile: Int!, $idCommunity: Int!, $memberRole: CommitteeRole!) {\n  createCommittee(\n    idProfile: $idProfile\n    idCommunity: $idCommunity\n    memberRole: $memberRole\n  ) {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nmutation UpdateCommittee($idProfile: Int!, $idCommunity: Int!, $memberRole: CommitteeRole!) {\n  updateCommittee(\n    idProfile: $idProfile\n    idCommunity: $idCommunity\n    memberRole: $memberRole\n  ) {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nmutation DeleteCommittee($idProfile: Int!, $idCommunity: Int!) {\n  deleteCommittee(idProfile: $idProfile, idCommunity: $idCommunity)\n}\n\nmutation CreateCategory($name: String!, $description: String!, $parentId: Int) {\n  createCategory(name: $name, description: $description, parentId: $parentId) {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nmutation UpdateCategory($id: Int!, $name: String, $description: String, $parentId: Int) {\n  updateCategory(\n    id: $id\n    name: $name\n    description: $description\n    parentId: $parentId\n  ) {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nmutation DeleteCategory($id: Int!) {\n  deleteCategory(id: $id)\n}\n\nmutation CreateLocation($addressLine1: String!, $addressLine2: String, $city: String!, $state: String!, $district: String, $country: String!, $coordinates: CoordinatesInput, $entranceNote: String) {\n  createLocation(\n    addressLine1: $addressLine1\n    addressLine2: $addressLine2\n    city: $city\n    state: $state\n    district: $district\n    country: $country\n    coordinates: $coordinates\n    entranceNote: $entranceNote\n  ) {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nmutation UpdateLocation($id: Int!, $addressLine1: String, $addressLine2: String, $city: String, $state: String, $district: String, $country: String, $coordinates: CoordinatesInput, $entranceNote: String) {\n  updateLocation(\n    id: $id\n    addressLine1: $addressLine1\n    addressLine2: $addressLine2\n    city: $city\n    state: $state\n    district: $district\n    country: $country\n    coordinates: $coordinates\n    entranceNote: $entranceNote\n  ) {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nmutation DeleteLocation($id: Int!) {\n  deleteLocation(id: $id)\n}\n\nmutation CreateItem($variant: ItemType!, $intentAction: ItemIntentAction!, $title: String, $description: String, $category: Int, $condition: ItemCondition!, $location: Int, $createdBy: UUID, $status: ItemStatus) {\n  createItem(\n    variant: $variant\n    intentAction: $intentAction\n    title: $title\n    description: $description\n    category: $category\n    condition: $condition\n    location: $location\n    createdBy: $createdBy\n    status: $status\n  ) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation UpdateItem($id: Int!, $status: ItemStatus!, $title: String, $description: String, $category: Int, $condition: ItemCondition!, $location: Int) {\n  updateItem(\n    id: $id\n    status: $status\n    title: $title\n    description: $description\n    category: $category\n    condition: $condition\n    location: $location\n  ) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation DeleteItem($id: Int!) {\n  deleteItem(id: $id)\n}\n\nmutation ReportItem($id: Int!) {\n  reportItem(id: $id) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nmutation CreateCollection($idCommunity: Int!, $title: String!, $visibility: CollectionVisibility!, $variant: CollectionType!, $position: Int!) {\n  createCollection(\n    idCommunity: $idCommunity\n    title: $title\n    visibility: $visibility\n    variant: $variant\n    position: $position\n  ) {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nmutation UpdateCollection($id: Int!, $title: String!, $visibility: CollectionVisibility!, $variant: CollectionType!, $position: Int!) {\n  updateCollection(\n    id: $id\n    title: $title\n    visibility: $visibility\n    variant: $variant\n    position: $position\n  ) {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nmutation DeleteCollection($id: Int!) {\n  deleteCollection(id: $id)\n}\n\nmutation CreateMedia($idItem: Int!, $url: String!, $mediaType: MediaType!, $position: Int!) {\n  createMedia(\n    idItem: $idItem\n    url: $url\n    mediaType: $mediaType\n    position: $position\n  ) {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nmutation UpdateMedia($id: Int!, $url: String, $mediaType: MediaType, $position: Int) {\n  updateMedia(id: $id, url: $url, mediaType: $mediaType, position: $position) {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nmutation DeleteMedia($id: Int!) {\n  deleteMedia(id: $id)\n}\n\nmutation CreatePublish($idItem: Int!, $idCollection: Int!, $note: String, $position: Int!, $createdBy: UUID!) {\n  createPublish(\n    idItem: $idItem\n    idCollection: $idCollection\n    note: $note\n    position: $position\n    createdBy: $createdBy\n  ) {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nmutation UpdatePublish($idItem: Int!, $idCollection: Int!, $note: String, $position: Int!) {\n  updatePublish(\n    idItem: $idItem\n    idCollection: $idCollection\n    note: $note\n    position: $position\n  ) {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nmutation DeletePublish($idItem: Int!, $idCollection: Int!) {\n  deletePublish(idItem: $idItem, idCollection: $idCollection)\n}\n\nmutation CreateMessage($idTransaction: Int!, $idSender: UUID!, $variant: MessageType!, $content: String!) {\n  create(\n    idTransaction: $idTransaction\n    idSender: $idSender\n    variant: $variant\n    content: $content\n  ) {\n    id\n    idSender\n    idTransaction\n    variant\n    content\n    sent_at\n    updatedAt\n  }\n}\n\nmutation UpdateTransaction($id: Int!, $status: TransactionStatus!) {\n  update(id: $id, status: $status) {\n    id\n    idPledge\n    idSchedule\n    idLocation\n    status\n    createdAt\n    updatedAt\n  }\n}"): typeof import('./graphql').CreateAccountDocument;
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query ListAccounts {\n  listAccounts {\n    id\n    remarks\n    createdAt\n  }\n}\n\nquery FindAccount($id: UUID!) {\n  findAccount(id: $id) {\n    id\n    remarks\n    createdAt\n  }\n}\n\nquery ListProfiles {\n  listProfiles {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery FindProfile($id: Int!) {\n  findProfile(id: $id) {\n    id\n    name\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery ListCommunities {\n  listCommunities {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery FindCommunity($id: Int!) {\n  findCommunity(id: $id) {\n    id\n    title\n    description\n    variant\n    owner\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery ListCommittees {\n  listCommittees {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nquery FindCommittee($id: UUID!) {\n  findCommittee(id: $id) {\n    idProfile\n    idCommunity\n    memberRole\n    joined_at\n  }\n}\n\nquery ListCategories {\n  listCategories {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nquery FindCategory($id: Int!) {\n  findCategory(id: $id) {\n    id\n    title\n    description\n    categoryParent\n  }\n}\n\nquery ListItems {\n  listItems {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery FindItem($id: Int!) {\n  findItem(id: $id) {\n    id\n    variant\n    intentAction\n    status\n    title\n    description\n    category\n    condition\n    location\n    viewsCount\n    isReported\n    createdAt\n    updatedAt\n    createdBy\n  }\n}\n\nquery ListLocations {\n  listLocations {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nquery FindLocation($id: Int!) {\n  findLocation(id: $id) {\n    id\n    addressLine1\n    addressLine2\n    city\n    state\n    country\n    district\n    entranceNote\n    createdAt\n    coordinates {\n      longitude\n      latitude\n    }\n  }\n}\n\nquery ListCollections {\n  listCollections {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nquery FindCollection($id: Int!) {\n  findCollection(id: $id) {\n    id\n    idCommunity\n    title\n    visibility\n    variant\n    position\n    createdAt\n    updatedAt\n  }\n}\n\nquery ListMedia {\n  listMedia {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nquery FindMedia($id: Int!) {\n  findMedia(id: $id) {\n    id\n    idItem\n    caption\n    url\n    variant\n    createdAt\n  }\n}\n\nquery ListPublishes {\n  listPublishes {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nquery FindPublish($id: Int!) {\n  findPublish(id: $id) {\n    idItem\n    idCollection\n    note\n    position\n    addedBy\n    posted_on\n  }\n}\n\nquery ListMessages {\n  listMessages {\n    id\n    idSender\n    idTransaction\n    variant\n    content\n    sent_at\n    updatedAt\n  }\n}\n\nquery FindMessage($id: Int!) {\n  findMessage(id: $id) {\n    id\n    idSender\n    idTransaction\n    variant\n    content\n    sent_at\n    updatedAt\n  }\n}"): typeof import('./graphql').ListAccountsDocument;
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query GetAccountList {\n  listAccounts {\n    id\n    createdAt\n  }\n}\n\nquery GetTestList {\n  listTests {\n    i\n    s\n    d\n  }\n}"): typeof import('./graphql').GetAccountListDocument;


export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}
