/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as CallbackIndexRouteImport } from './routes/callback/index'
import { Route as CallbackLogoutRouteImport } from './routes/callback/logout'
import { Route as CallbackLoginRouteImport } from './routes/callback/login'
import { Route as AppMockGenerateRouteImport } from './routes/_app/mock/generate'
import { Route as AppMockDisplayRouteImport } from './routes/_app/mock/display'

const AboutLazyRouteImport = createFileRoute('/about')()
const AppLazyRouteImport = createFileRoute('/_app')()
const AppIndexLazyRouteImport = createFileRoute('/_app/')()
const AppRetailerLazyRouteImport = createFileRoute('/_app/retailer')()
const AppProtectedLazyRouteImport = createFileRoute('/_app/protected')()
const AppMarketLazyRouteImport = createFileRoute('/_app/market')()
const AppLuxuryLazyRouteImport = createFileRoute('/_app/luxury')()
const AppDonationLazyRouteImport = createFileRoute('/_app/donation')()

const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const AppLazyRoute = AppLazyRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/_app.lazy').then((d) => d.Route))
const AppIndexLazyRoute = AppIndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/index.lazy').then((d) => d.Route))
const CallbackIndexRoute = CallbackIndexRouteImport.update({
  id: '/callback/',
  path: '/callback/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRetailerLazyRoute = AppRetailerLazyRouteImport.update({
  id: '/retailer',
  path: '/retailer',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/retailer.lazy').then((d) => d.Route))
const AppProtectedLazyRoute = AppProtectedLazyRouteImport.update({
  id: '/protected',
  path: '/protected',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() =>
  import('./routes/_app/protected.lazy').then((d) => d.Route),
)
const AppMarketLazyRoute = AppMarketLazyRouteImport.update({
  id: '/market',
  path: '/market',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/market.lazy').then((d) => d.Route))
const AppLuxuryLazyRoute = AppLuxuryLazyRouteImport.update({
  id: '/luxury',
  path: '/luxury',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/luxury.lazy').then((d) => d.Route))
const AppDonationLazyRoute = AppDonationLazyRouteImport.update({
  id: '/donation',
  path: '/donation',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/donation.lazy').then((d) => d.Route))
const CallbackLogoutRoute = CallbackLogoutRouteImport.update({
  id: '/callback/logout',
  path: '/callback/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const CallbackLoginRoute = CallbackLoginRouteImport.update({
  id: '/callback/login',
  path: '/callback/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppMockGenerateRoute = AppMockGenerateRouteImport.update({
  id: '/mock/generate',
  path: '/mock/generate',
  getParentRoute: () => AppLazyRoute,
} as any)
const AppMockDisplayRoute = AppMockDisplayRouteImport.update({
  id: '/mock/display',
  path: '/mock/display',
  getParentRoute: () => AppLazyRoute,
} as any)

export interface FileRoutesByFullPath {
  '': typeof AppLazyRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/callback/login': typeof CallbackLoginRoute
  '/callback/logout': typeof CallbackLogoutRoute
  '/donation': typeof AppDonationLazyRoute
  '/luxury': typeof AppLuxuryLazyRoute
  '/market': typeof AppMarketLazyRoute
  '/protected': typeof AppProtectedLazyRoute
  '/retailer': typeof AppRetailerLazyRoute
  '/callback': typeof CallbackIndexRoute
  '/': typeof AppIndexLazyRoute
  '/mock/display': typeof AppMockDisplayRoute
  '/mock/generate': typeof AppMockGenerateRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutLazyRoute
  '/callback/login': typeof CallbackLoginRoute
  '/callback/logout': typeof CallbackLogoutRoute
  '/donation': typeof AppDonationLazyRoute
  '/luxury': typeof AppLuxuryLazyRoute
  '/market': typeof AppMarketLazyRoute
  '/protected': typeof AppProtectedLazyRoute
  '/retailer': typeof AppRetailerLazyRoute
  '/callback': typeof CallbackIndexRoute
  '/': typeof AppIndexLazyRoute
  '/mock/display': typeof AppMockDisplayRoute
  '/mock/generate': typeof AppMockGenerateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppLazyRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/callback/login': typeof CallbackLoginRoute
  '/callback/logout': typeof CallbackLogoutRoute
  '/_app/donation': typeof AppDonationLazyRoute
  '/_app/luxury': typeof AppLuxuryLazyRoute
  '/_app/market': typeof AppMarketLazyRoute
  '/_app/protected': typeof AppProtectedLazyRoute
  '/_app/retailer': typeof AppRetailerLazyRoute
  '/callback/': typeof CallbackIndexRoute
  '/_app/': typeof AppIndexLazyRoute
  '/_app/mock/display': typeof AppMockDisplayRoute
  '/_app/mock/generate': typeof AppMockGenerateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/callback/login'
    | '/callback/logout'
    | '/donation'
    | '/luxury'
    | '/market'
    | '/protected'
    | '/retailer'
    | '/callback'
    | '/'
    | '/mock/display'
    | '/mock/generate'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/callback/login'
    | '/callback/logout'
    | '/donation'
    | '/luxury'
    | '/market'
    | '/protected'
    | '/retailer'
    | '/callback'
    | '/'
    | '/mock/display'
    | '/mock/generate'
  id:
    | '__root__'
    | '/_app'
    | '/about'
    | '/callback/login'
    | '/callback/logout'
    | '/_app/donation'
    | '/_app/luxury'
    | '/_app/market'
    | '/_app/protected'
    | '/_app/retailer'
    | '/callback/'
    | '/_app/'
    | '/_app/mock/display'
    | '/_app/mock/generate'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppLazyRoute: typeof AppLazyRouteWithChildren
  AboutLazyRoute: typeof AboutLazyRoute
  CallbackLoginRoute: typeof CallbackLoginRoute
  CallbackLogoutRoute: typeof CallbackLogoutRoute
  CallbackIndexRoute: typeof CallbackIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexLazyRouteImport
      parentRoute: typeof AppLazyRoute
    }
    '/callback/': {
      id: '/callback/'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/retailer': {
      id: '/_app/retailer'
      path: '/retailer'
      fullPath: '/retailer'
      preLoaderRoute: typeof AppRetailerLazyRouteImport
      parentRoute: typeof AppLazyRoute
    }
    '/_app/protected': {
      id: '/_app/protected'
      path: '/protected'
      fullPath: '/protected'
      preLoaderRoute: typeof AppProtectedLazyRouteImport
      parentRoute: typeof AppLazyRoute
    }
    '/_app/market': {
      id: '/_app/market'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof AppMarketLazyRouteImport
      parentRoute: typeof AppLazyRoute
    }
    '/_app/luxury': {
      id: '/_app/luxury'
      path: '/luxury'
      fullPath: '/luxury'
      preLoaderRoute: typeof AppLuxuryLazyRouteImport
      parentRoute: typeof AppLazyRoute
    }
    '/_app/donation': {
      id: '/_app/donation'
      path: '/donation'
      fullPath: '/donation'
      preLoaderRoute: typeof AppDonationLazyRouteImport
      parentRoute: typeof AppLazyRoute
    }
    '/callback/logout': {
      id: '/callback/logout'
      path: '/callback/logout'
      fullPath: '/callback/logout'
      preLoaderRoute: typeof CallbackLogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/callback/login': {
      id: '/callback/login'
      path: '/callback/login'
      fullPath: '/callback/login'
      preLoaderRoute: typeof CallbackLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/mock/generate': {
      id: '/_app/mock/generate'
      path: '/mock/generate'
      fullPath: '/mock/generate'
      preLoaderRoute: typeof AppMockGenerateRouteImport
      parentRoute: typeof AppLazyRoute
    }
    '/_app/mock/display': {
      id: '/_app/mock/display'
      path: '/mock/display'
      fullPath: '/mock/display'
      preLoaderRoute: typeof AppMockDisplayRouteImport
      parentRoute: typeof AppLazyRoute
    }
  }
}

interface AppLazyRouteChildren {
  AppDonationLazyRoute: typeof AppDonationLazyRoute
  AppLuxuryLazyRoute: typeof AppLuxuryLazyRoute
  AppMarketLazyRoute: typeof AppMarketLazyRoute
  AppProtectedLazyRoute: typeof AppProtectedLazyRoute
  AppRetailerLazyRoute: typeof AppRetailerLazyRoute
  AppIndexLazyRoute: typeof AppIndexLazyRoute
  AppMockDisplayRoute: typeof AppMockDisplayRoute
  AppMockGenerateRoute: typeof AppMockGenerateRoute
}

const AppLazyRouteChildren: AppLazyRouteChildren = {
  AppDonationLazyRoute: AppDonationLazyRoute,
  AppLuxuryLazyRoute: AppLuxuryLazyRoute,
  AppMarketLazyRoute: AppMarketLazyRoute,
  AppProtectedLazyRoute: AppProtectedLazyRoute,
  AppRetailerLazyRoute: AppRetailerLazyRoute,
  AppIndexLazyRoute: AppIndexLazyRoute,
  AppMockDisplayRoute: AppMockDisplayRoute,
  AppMockGenerateRoute: AppMockGenerateRoute,
}

const AppLazyRouteWithChildren =
  AppLazyRoute._addFileChildren(AppLazyRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AppLazyRoute: AppLazyRouteWithChildren,
  AboutLazyRoute: AboutLazyRoute,
  CallbackLoginRoute: CallbackLoginRoute,
  CallbackLogoutRoute: CallbackLogoutRoute,
  CallbackIndexRoute: CallbackIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
