/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CallbackIndexImport } from './routes/callback/index'
import { Route as CallbackLogoutImport } from './routes/callback/logout'
import { Route as CallbackLoginImport } from './routes/callback/login'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const AppLazyImport = createFileRoute('/_app')()
const AppIndexLazyImport = createFileRoute('/_app/')()
const AppRetailerLazyImport = createFileRoute('/_app/retailer')()
const AppProtectedLazyImport = createFileRoute('/_app/protected')()
const AppMockDataLazyImport = createFileRoute('/_app/mock-data')()
const AppMarketLazyImport = createFileRoute('/_app/market')()
const AppLuxuryLazyImport = createFileRoute('/_app/luxury')()
const AppDonationLazyImport = createFileRoute('/_app/donation')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const AppLazyRoute = AppLazyImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_app.lazy').then((d) => d.Route))

const AppIndexLazyRoute = AppIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/index.lazy').then((d) => d.Route))

const CallbackIndexRoute = CallbackIndexImport.update({
  id: '/callback/',
  path: '/callback/',
  getParentRoute: () => rootRoute,
} as any)

const AppRetailerLazyRoute = AppRetailerLazyImport.update({
  id: '/retailer',
  path: '/retailer',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/retailer.lazy').then((d) => d.Route))

const AppProtectedLazyRoute = AppProtectedLazyImport.update({
  id: '/protected',
  path: '/protected',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() =>
  import('./routes/_app/protected.lazy').then((d) => d.Route),
)

const AppMockDataLazyRoute = AppMockDataLazyImport.update({
  id: '/mock-data',
  path: '/mock-data',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() =>
  import('./routes/_app/mock-data.lazy').then((d) => d.Route),
)

const AppMarketLazyRoute = AppMarketLazyImport.update({
  id: '/market',
  path: '/market',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/market.lazy').then((d) => d.Route))

const AppLuxuryLazyRoute = AppLuxuryLazyImport.update({
  id: '/luxury',
  path: '/luxury',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/luxury.lazy').then((d) => d.Route))

const AppDonationLazyRoute = AppDonationLazyImport.update({
  id: '/donation',
  path: '/donation',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/donation.lazy').then((d) => d.Route))

const CallbackLogoutRoute = CallbackLogoutImport.update({
  id: '/callback/logout',
  path: '/callback/logout',
  getParentRoute: () => rootRoute,
} as any)

const CallbackLoginRoute = CallbackLoginImport.update({
  id: '/callback/login',
  path: '/callback/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/callback/login': {
      id: '/callback/login'
      path: '/callback/login'
      fullPath: '/callback/login'
      preLoaderRoute: typeof CallbackLoginImport
      parentRoute: typeof rootRoute
    }
    '/callback/logout': {
      id: '/callback/logout'
      path: '/callback/logout'
      fullPath: '/callback/logout'
      preLoaderRoute: typeof CallbackLogoutImport
      parentRoute: typeof rootRoute
    }
    '/_app/donation': {
      id: '/_app/donation'
      path: '/donation'
      fullPath: '/donation'
      preLoaderRoute: typeof AppDonationLazyImport
      parentRoute: typeof AppLazyImport
    }
    '/_app/luxury': {
      id: '/_app/luxury'
      path: '/luxury'
      fullPath: '/luxury'
      preLoaderRoute: typeof AppLuxuryLazyImport
      parentRoute: typeof AppLazyImport
    }
    '/_app/market': {
      id: '/_app/market'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof AppMarketLazyImport
      parentRoute: typeof AppLazyImport
    }
    '/_app/mock-data': {
      id: '/_app/mock-data'
      path: '/mock-data'
      fullPath: '/mock-data'
      preLoaderRoute: typeof AppMockDataLazyImport
      parentRoute: typeof AppLazyImport
    }
    '/_app/protected': {
      id: '/_app/protected'
      path: '/protected'
      fullPath: '/protected'
      preLoaderRoute: typeof AppProtectedLazyImport
      parentRoute: typeof AppLazyImport
    }
    '/_app/retailer': {
      id: '/_app/retailer'
      path: '/retailer'
      fullPath: '/retailer'
      preLoaderRoute: typeof AppRetailerLazyImport
      parentRoute: typeof AppLazyImport
    }
    '/callback/': {
      id: '/callback/'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof CallbackIndexImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexLazyImport
      parentRoute: typeof AppLazyImport
    }
  }
}

// Create and export the route tree

interface AppLazyRouteChildren {
  AppDonationLazyRoute: typeof AppDonationLazyRoute
  AppLuxuryLazyRoute: typeof AppLuxuryLazyRoute
  AppMarketLazyRoute: typeof AppMarketLazyRoute
  AppMockDataLazyRoute: typeof AppMockDataLazyRoute
  AppProtectedLazyRoute: typeof AppProtectedLazyRoute
  AppRetailerLazyRoute: typeof AppRetailerLazyRoute
  AppIndexLazyRoute: typeof AppIndexLazyRoute
}

const AppLazyRouteChildren: AppLazyRouteChildren = {
  AppDonationLazyRoute: AppDonationLazyRoute,
  AppLuxuryLazyRoute: AppLuxuryLazyRoute,
  AppMarketLazyRoute: AppMarketLazyRoute,
  AppMockDataLazyRoute: AppMockDataLazyRoute,
  AppProtectedLazyRoute: AppProtectedLazyRoute,
  AppRetailerLazyRoute: AppRetailerLazyRoute,
  AppIndexLazyRoute: AppIndexLazyRoute,
}

const AppLazyRouteWithChildren =
  AppLazyRoute._addFileChildren(AppLazyRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppLazyRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/callback/login': typeof CallbackLoginRoute
  '/callback/logout': typeof CallbackLogoutRoute
  '/donation': typeof AppDonationLazyRoute
  '/luxury': typeof AppLuxuryLazyRoute
  '/market': typeof AppMarketLazyRoute
  '/mock-data': typeof AppMockDataLazyRoute
  '/protected': typeof AppProtectedLazyRoute
  '/retailer': typeof AppRetailerLazyRoute
  '/callback': typeof CallbackIndexRoute
  '/': typeof AppIndexLazyRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutLazyRoute
  '/callback/login': typeof CallbackLoginRoute
  '/callback/logout': typeof CallbackLogoutRoute
  '/donation': typeof AppDonationLazyRoute
  '/luxury': typeof AppLuxuryLazyRoute
  '/market': typeof AppMarketLazyRoute
  '/mock-data': typeof AppMockDataLazyRoute
  '/protected': typeof AppProtectedLazyRoute
  '/retailer': typeof AppRetailerLazyRoute
  '/callback': typeof CallbackIndexRoute
  '/': typeof AppIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppLazyRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/callback/login': typeof CallbackLoginRoute
  '/callback/logout': typeof CallbackLogoutRoute
  '/_app/donation': typeof AppDonationLazyRoute
  '/_app/luxury': typeof AppLuxuryLazyRoute
  '/_app/market': typeof AppMarketLazyRoute
  '/_app/mock-data': typeof AppMockDataLazyRoute
  '/_app/protected': typeof AppProtectedLazyRoute
  '/_app/retailer': typeof AppRetailerLazyRoute
  '/callback/': typeof CallbackIndexRoute
  '/_app/': typeof AppIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/callback/login'
    | '/callback/logout'
    | '/donation'
    | '/luxury'
    | '/market'
    | '/mock-data'
    | '/protected'
    | '/retailer'
    | '/callback'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/callback/login'
    | '/callback/logout'
    | '/donation'
    | '/luxury'
    | '/market'
    | '/mock-data'
    | '/protected'
    | '/retailer'
    | '/callback'
    | '/'
  id:
    | '__root__'
    | '/_app'
    | '/about'
    | '/callback/login'
    | '/callback/logout'
    | '/_app/donation'
    | '/_app/luxury'
    | '/_app/market'
    | '/_app/mock-data'
    | '/_app/protected'
    | '/_app/retailer'
    | '/callback/'
    | '/_app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppLazyRoute: typeof AppLazyRouteWithChildren
  AboutLazyRoute: typeof AboutLazyRoute
  CallbackLoginRoute: typeof CallbackLoginRoute
  CallbackLogoutRoute: typeof CallbackLogoutRoute
  CallbackIndexRoute: typeof CallbackIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppLazyRoute: AppLazyRouteWithChildren,
  AboutLazyRoute: AboutLazyRoute,
  CallbackLoginRoute: CallbackLoginRoute,
  CallbackLogoutRoute: CallbackLogoutRoute,
  CallbackIndexRoute: CallbackIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/about",
        "/callback/login",
        "/callback/logout",
        "/callback/"
      ]
    },
    "/_app": {
      "filePath": "_app.lazy.tsx",
      "children": [
        "/_app/donation",
        "/_app/luxury",
        "/_app/market",
        "/_app/mock-data",
        "/_app/protected",
        "/_app/retailer",
        "/_app/"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/callback/login": {
      "filePath": "callback/login.tsx"
    },
    "/callback/logout": {
      "filePath": "callback/logout.tsx"
    },
    "/_app/donation": {
      "filePath": "_app/donation.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/luxury": {
      "filePath": "_app/luxury.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/market": {
      "filePath": "_app/market.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/mock-data": {
      "filePath": "_app/mock-data.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/protected": {
      "filePath": "_app/protected.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/retailer": {
      "filePath": "_app/retailer.lazy.tsx",
      "parent": "/_app"
    },
    "/callback/": {
      "filePath": "callback/index.tsx"
    },
    "/_app/": {
      "filePath": "_app/index.lazy.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
