/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const AppLazyImport = createFileRoute('/_app')()
const AppIndexLazyImport = createFileRoute('/_app/')()
const AppPage1LazyImport = createFileRoute('/_app/page-1')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const AppLazyRoute = AppLazyImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_app.lazy').then((d) => d.Route))

const AppIndexLazyRoute = AppIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/index.lazy').then((d) => d.Route))

const AppPage1LazyRoute = AppPage1LazyImport.update({
  id: '/page-1',
  path: '/page-1',
  getParentRoute: () => AppLazyRoute,
} as any).lazy(() => import('./routes/_app/page-1.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_app/page-1': {
      id: '/_app/page-1'
      path: '/page-1'
      fullPath: '/page-1'
      preLoaderRoute: typeof AppPage1LazyImport
      parentRoute: typeof AppLazyImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexLazyImport
      parentRoute: typeof AppLazyImport
    }
  }
}

// Create and export the route tree

interface AppLazyRouteChildren {
  AppPage1LazyRoute: typeof AppPage1LazyRoute
  AppIndexLazyRoute: typeof AppIndexLazyRoute
}

const AppLazyRouteChildren: AppLazyRouteChildren = {
  AppPage1LazyRoute: AppPage1LazyRoute,
  AppIndexLazyRoute: AppIndexLazyRoute,
}

const AppLazyRouteWithChildren =
  AppLazyRoute._addFileChildren(AppLazyRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppLazyRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/page-1': typeof AppPage1LazyRoute
  '/': typeof AppIndexLazyRoute
}

export interface FileRoutesByTo {
  '/about': typeof AboutLazyRoute
  '/page-1': typeof AppPage1LazyRoute
  '/': typeof AppIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppLazyRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/_app/page-1': typeof AppPage1LazyRoute
  '/_app/': typeof AppIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/about' | '/page-1' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/page-1' | '/'
  id: '__root__' | '/_app' | '/about' | '/_app/page-1' | '/_app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppLazyRoute: typeof AppLazyRouteWithChildren
  AboutLazyRoute: typeof AboutLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppLazyRoute: AppLazyRouteWithChildren,
  AboutLazyRoute: AboutLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/about"
      ]
    },
    "/_app": {
      "filePath": "_app.lazy.tsx",
      "children": [
        "/_app/page-1",
        "/_app/"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/_app/page-1": {
      "filePath": "_app/page-1.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.lazy.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
