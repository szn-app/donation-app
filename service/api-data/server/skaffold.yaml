apiVersion: skaffold/v4beta12
kind: Config
metadata:
  name: api-data-server

requires:
  - path: ../object-store
    configs: [api-data-object-store]                 
       
  - path: ../database
    configs: [api-data-database]                 

  - path: .
    configs: [api-data-server-generic]
    activeProfiles:                                     
      - name: development
        activatedBy: [development]
      - name: local-production
        activatedBy: [local-production]
      - name: production
        activatedBy: [production]

profiles:
  - name: development
  - name: local-production
  - name: production

---

apiVersion: skaffold/v4beta12
kind: Config
metadata:
  name: api-data-server--no-dep

requires:
  - path: .
    configs: [api-data-server-generic]
    activeProfiles:                                     
      - name: development
        activatedBy: [development]
      - name: local-production
        activatedBy: [local-production]
      - name: production
        activatedBy: [production]

profiles:
  - name: development
  - name: local-production
  - name: production

---

apiVersion: skaffold/v4beta12
kind: Config
metadata:
  name: api-data-server-generic

build:
  local: 
    push: false
    useBuildkit: true
  tagPolicy:
    # sha256: {} 
    gitCommit: {}

deploy:
  kubectl: {}
  statusCheck: true
  
portForward:
  - resourceType: Service
    namespace: api-data
    resourceName: api-data
    port: 80

profiles:

- name: development
  # activation:
  #   - kubeContext: minikube
      
  build: 
    artifacts:
    - image: api-data
      context: .
      docker:
        target: development
        dockerfile: Dockerfile
        buildArgs: {}
      # NOTE: limitations https://skaffold.dev/docs/filesync/#limitations
      sync:
        manual:
        - src: "src/**/*.rs"
          dest: .
  manifests:
    kustomize:
      paths:
      - k8s/overlays/dev
  deploy:
    kubeContext: minikube
    kubectl:
      hooks:
        before:
          - host:
              command: ["bash", "-it", "-c", "source ./script/deploy.sh && func#predeploy-skaffold-hook@api-data-server development"]
              dir: .
        after:
          - host:
              command: ["bash", "-it", "-c", "source ./script/deploy.sh && func#postdeploy-skaffold-hook@api-data-server development"]
              dir: .

# TODO: update and fix implementation
- name: volume-development
  # activation:
  #   - kubeContext: minikube
      
  build: 
    local: 
      push: false 
      tryImportMissing: false
    artifacts:
    - image: api-data
      context: .
      docker:
        target: development
        dockerfile: Dockerfile
        buildArgs: {}
  manifests:
    kustomize:
      paths:
      - k8s/overlays/dev-volume
  deploy:
    kubeContext: minikube

# build production mode and run with local dev settings
- name: local-production

  build: 
    local: 
      push: false 
      tryImportMissing: false
    tagPolicy:
      customTemplate:
        template: "api-data:latest"
    artifacts:
    - image: api-data
      context: .
      docker:
        target: production
        dockerfile: Dockerfile
        buildArgs: {}
  manifests:
    kustomize:
      paths:
      - k8s/overlays/dev

  deploy:
    kubectl:
      hooks:
        before:
          - host:
              command: ["bash", "-it", "-c", "source ./script/deploy.sh && func#predeploy-skaffold-hook@api-data-server development"]
              dir: .
        after:
          - host:
              command: ["bash", "-it", "-c", "source ./script/deploy.sh && func#postdeploy-skaffold-hook@api-data-server development"]
              dir: .

- name: production

  manifests:
    kustomize:
      paths:
      - k8s/overlays/prod

  deploy:
    kubectl:
      hooks:
        before:
          - host:
              command: ["bash", "-it", "-c", "source ./script/deploy.sh && func#predeploy-skaffold-hook@api-data-server production"]
              dir: .
        after:
          - host:
              command: ["bash", "-it", "-c", "source ./script/deploy.sh && func#postdeploy-skaffold-hook@api-data-server production"]
              dir: .

# NOTE: used in CI/CD github workflow
# TODO: implement in workflow and apply to other services. Use skaffold.env to set and read version number
- name: hook-build-push 
  build: 
    local: 
      push: true
      tryImportMissing: false
    tagPolicy:
      envTemplate:
        template: "api-data:{{.VERSION_NUMBER}}"
      # customTemplate:
      #   template: "api-data:latest"
    artifacts:
    - image: ghcr.io/szn-app/donation-app/api-data
      context: .
      docker:
        target: production
        dockerfile: Dockerfile
        buildArgs: {}
