apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webhook-handler

requires:
  - path: .
    configs: [webhook-handler-generic]
    activeProfiles:
      - name: dev-env
        activatedBy: [dev-watch, dev-rebuild]
      - name: staging-env
        activatedBy: [staging-rebuild, staging-prebuilt]
      - name: prod-env
        activatedBy: [prod]
      - name: watch
        activatedBy: [dev-watch]
      - name: rebuild-debug
        activatedBy: [dev-rebuild]
      - name: rebuild-release
        activatedBy: [staging-rebuild]
      - name: prebuilt
        activatedBy: [staging-prebuilt, prod]

profiles:
  - name: dev-watch
  - name: dev-rebuild
  - name: staging-rebuild
  - name: staging-prebuilt
  - name: prod

---

apiVersion: skaffold/v4beta13
kind: Config
metadata:
  name: webhook-handler-generic

requires:
  - path: ../kafka-message-queue
    configs: [kafka-message-queue]                 
  # - path: ../api-data
  #   configs: [api-data]                 

build:
  local: 
    useBuildkit: true
    push: false
    tryImportMissing: false
  tagPolicy:
    sha256: {} 
    # customTemplate:
    #   template: "webhook-handler:latest"

deploy:
  kubectl: {}
  statusCheck: true
  
portForward:
  - resourceType: Service
    resourceName: webhook-handler
    namespace: donation-app
    port: 80

profiles:

- name: dev-env
  manifests:
    kustomize:
      paths:
      - k8s/overlays/dev

  deploy: 
    kubectl: 
      hooks:
        before:
          - host:
              command: ["bash", "-it", "-c", "source ./script.sh && func#predeploy_hook@webhook-handler dev"]
              dir: .
        after:
          - host:
              command: ["bash", "-it", "-c", "source ./script.sh && func#postdeploy_hook@webhook-handler dev"]
              dir: .

- name: staging-env
  manifests:
    kustomize:
      paths:
      - k8s/overlays/staging

  deploy: 
    kubectl: 
      hooks:
        before:
          - host:
              command: ["bash", "-it", "-c", "source ./script.sh && func#predeploy_hook@webhook-handler staging"]
              dir: .
        after:
          - host:
              command: ["bash", "-it", "-c", "source ./script.sh && func#postdeploy_hook@webhook-handler staging"]
              dir: .

- name: prod-env
  manifests:
    kustomize:
      paths:
      - k8s/overlays/prod
  
  deploy: 
    kubectl: 
      hooks:
        before:
          - host:
              command: ["bash", "-it", "-c", "source ./script.sh && func#predeploy_hook@webhook-handler prod"]
              dir: .
        after:
          - host:
              command: ["bash", "-it", "-c", "source ./script.sh && func#postdeploy_hook@webhook-handler prod"]
              dir: .

- name: watch
  build: 
    artifacts:
    - image: webhook-handler
      context: .
      docker:
        target: debug
        dockerfile: Dockerfile
        noCache: false
        buildArgs: {}
      # NOTE: limitations https://skaffold.dev/docs/filesync/#limitations
      sync:
        manual:
        - src: "src/**/*.rs"
          dest: .

- name: rebuild-debug
  build: 
    artifacts:
    - image: webhook-handler
      context: .
      docker:
        target: debug
        dockerfile: Dockerfile
        noCache: false
        buildArgs: {}

- name: rebuild-release
  build: 
    artifacts:
    - image: webhook-handler
      context: .
      docker:
        target: release
        dockerfile: Dockerfile
        noCache: false
        buildArgs: {}

- name: prebuilt
  build: {}
