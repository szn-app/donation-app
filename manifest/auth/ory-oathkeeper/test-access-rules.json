[
  {
    "id": "test-keto-parse-token",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/keto-token</?>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "oauth2_introspection",
        "config": {
          "scope_strategy": "none",
          "token_from": {
            "cookie": "dev_access_token"
          }
        }
      }
    ],
    "authorizer": {
      "handler": "remote_json",
      "config": {
        "remote": "http://keto-read:80/relation-tuples/check",
        "payload": "{ \"namespace\": \"Endpoint\", \"object\": \"test\", \"relation\": \"access\", \"subject_set\": { \"namespace\": \"User\", \"object\": \"{{ print .Subject }}\", \"relation\": \"\" } }"
      }
    },
    "mutators": [
      {
        "handler": "header",
        "config": {
          "headers": {
            "x-user-id": "subject-{{ print .Subject }}"
          }
        }
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": {
          "verbose": true
        }
      }
    ]
  },

  {
    "id": "test-keto-parse-session",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/keto-session</?>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "cookie_session",
        "config": {
          "check_session_url": "http://kratos-public/sessions/whoami",
          "only": ["ory_kratos_session"], 
          "extra_from": "@this",
          "subject_from": "identity.id",
          "preserve_path": true,
          "preserve_host": true
        }
      }
    ],
    "authorizer": {
      "handler": "remote_json",
      "config": {
        "remote": "http://keto-read:80/relation-tuples/check",
        "payload": "{ \"namespace\": \"Endpoint\", \"object\": \"test\", \"relation\": \"access\", \"subject_set\": { \"namespace\": \"User\", \"object\": \"{{ print .Subject }}\", \"relation\": \"\" } }"
      }
    },
    "mutators": [
      {
        "handler": "header",
        "config": {
          "headers": {
            "x-user-id": "subject-{{ print .Subject }}"
          }
        }
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": {
          "verbose": true
        }
      }
    ]
  },

  {
    "id": "test-keto-policy-static",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/keto-static</?>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "anonymous"
      }
    ],
    "authorizer": {
      "handler": "remote_json",
      "config": {
        "remote": "http://keto-read:80/relation-tuples/check", 
        "payload": "{ \"namespace\": \"Endpoint\", \"object\": \"test\", \"relation\": \"access\", \"subject_set\": { \"namespace\": \"Group\", \"object\": \"admin\", \"relation\": \"\" } }"
      }
    },
    "mutators": [
      {
        "handler": "header",
        "config": null
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": { 
          "verbose": true
        }
      }
    ]
  },

  {
    "id": "test-multiple-authenticators-example",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/multiple-authenticators</?>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "oauth2_introspection",
        "config": {
          "scope_strategy": "none",
          "token_from": {
            "cookie": "access_token"
          }
        }
      },
      {
        "handler": "oauth2_introspection",
        "config": {
          "scope_strategy": "none",
          "token_from": {
            "header": "Authorization"
          }
        }
      },
      {
        "handler": "jwt",
        "config": {
          "token_from": {
            "header": "Authorization"
          }
        }
      },
      {
        "handler": "cookie_session",
        "config": {
          "check_session_url": "http://kratos-public/sessions/whoami",
          "preserve_path": true,
          "only": ["ory_kratos_session"]
        }
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "header",
        "config": null
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": { 
          "verbose": true
        }

      }
    ]
  },
  
  {
    "id": "test-session-cookie",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/session-cookie</?>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "cookie_session",
        "config": {
          "check_session_url": "http://kratos-public/sessions/whoami",
          "only": ["ory_kratos_session"], 
          "extra_from": "@this",
          "subject_from": "identity.id",
          "preserve_path": true,
          "preserve_host": true
        }
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "header",
        "config": {
          "headers": {
            "x-user-id": "subject-{{ print .Subject }}",
            "x-custom-header": "custom-value"    
          }
        }
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": { 
          "verbose": true
        }

      }
    ]
  },

  {
    "id": "test-oauth-header",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/oauth-header</?>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "oauth2_introspection",
        "config": {
          "scope_strategy": "none",
          "token_from": {
            "header": "Authorization"
          }
        }
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "header",
        "config": null
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": { 
          "verbose": true
        }

      }
    ]
  },
  
  {
    "id": "test-jwt",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/jwt</?>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "jwt",
        "config": {
          "token_from": {
            "header": "Authorization"
          }
        }
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "header",
        "config": null
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": { 
          "verbose": true
        }

      }
    ]
  },
  
  {
    "id": "test-anonymous",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/anonymous</?>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "anonymous"
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "header",
        "config": null
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": { 
          "verbose": true
        }

      }
    ]
  },
  
  {
    "id": "test-anonymous-forbidden",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/deny</?><.*>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "anonymous"
      }
    ],
    "authorizer": {
      "handler": "deny"
    },
    "mutators": [
      {
        "handler": "header",
        "config": null
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": { 
          "verbose": true
        }

      }
    ]
  },
  
  {
    "id": "test-favicon",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/favicon.ico",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "anonymous"
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "header",
        "config": null
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": { 
          "verbose": true
        }

      }
    ]
  },
  
  {
    "id": "test-anonymous-allow",
    "match": {
      "url": "<[a-zA-Z][a-zA-Z0-9+.-]*>://test.<([a-zA-Z0-9-]+.)*[a-zA-Z0-9-]+.[a-zA-Z]{2,}>/allow</?><.*>",
      "methods": ["GET", "POST", "OPTIONS", "PUT", "PATCH", "HEAD", "DELETE"]
    },
    "authenticators": [
      {
        "handler": "anonymous"
      }
    ],
    "authorizer": {
      "handler": "allow"
    },
    "mutators": [
      {
        "handler": "header",
        "config": null
      }
    ],
    "errors": [
      {
        "handler": "json",
        "config": { 
          "verbose": true
        }

      }
    ]
  }
]
